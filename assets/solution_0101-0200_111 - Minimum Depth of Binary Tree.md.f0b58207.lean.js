import{_ as s,c as n,o as a,a as l}from"./app.de037eaf.js";const i=JSON.parse('{"title":"111. Minimum Depth of Binary Tree","description":"","frontmatter":{},"headers":[{"level":2,"title":"Problem Statement:","slug":"problem-statement","link":"#problem-statement","children":[{"level":3,"title":"Example 1:","slug":"example-1","link":"#example-1","children":[]},{"level":3,"title":"Example 2:","slug":"example-2","link":"#example-2","children":[]},{"level":3,"title":"Constraints:","slug":"constraints","link":"#constraints","children":[]}]},{"level":2,"title":"Solutions:","slug":"solutions","link":"#solutions","children":[{"level":3,"title":"Java","slug":"java","link":"#java","children":[]},{"level":3,"title":"...","slug":"","link":"#","children":[]}]}],"relativePath":"solution/0101-0200/111 - Minimum Depth of Binary Tree.md"}'),p={name:"solution/0101-0200/111 - Minimum Depth of Binary Tree.md"},o=l("",19),e=[o];function t(r,c,D,y,A,C){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{i as __pageData,h as default};
